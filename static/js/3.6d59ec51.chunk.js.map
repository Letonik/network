{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","onClick","createField","Input","type","Textarea","className","s","formSummaryError","keys","contacts","map","key","ProfileData","isOwner","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","updateSatatus","savePhoto","saveProfile","Preloader","discriptionBlock","src","photos","large","userPhoto","target","files","border","initialValues","formData","then","Post","item","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","name","validate","required","placeholder","MyPosts","React","memo","postsElements","posts","post","id","postBlock","forms","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","borderPost","ProfileContainer","userId","this","match","params","authorisedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6d59ec51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__QSPas\",\"border\":\"ProfileInfo_border__1glIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__19aEe\",\"borderPost\":\"Profile_borderPost__6XO9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3gRDf\",\"postBlock\":\"MyPosts_postBlock__2ndh4\",\"posts\":\"MyPosts_posts__1n0St\",\"forms\":\"MyPosts_forms__37Ywt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__330BZ\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={ deactivateEditMode }\r\n                       autoFocus={true} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createField, Input, Textarea} from \"../../Common/FormControl/FormControl\"\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validator\";\r\nimport s from \"../../Common/FormControl/FormControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button onClick={() => {}}>save</button></div>\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField(\"\",\"LookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField(\"About Me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                {error && <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key}>\r\n                        <b>{key}</b>: {createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/Images/ava.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateSatatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.discriptionBlock}>\r\n                <img src={(profile.photos.large) || userPhoto} />\r\n                {isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n                <div  className={s.border}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateSatatus}/>\r\n                </div>\r\n                {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                : <ProfileData toEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={toEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                if (profile.contacts[key]) {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                }\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://proprikol.ru/wp-content/uploads/2020/02/kartinki-na-avatarku-dlya-parnej-i-muzhchin-1-1-650x583.jpg\"\r\n                alt=\"avatar\"/>\r\n            {props.message}\r\n            <div><span>Like {props.likesCount}</span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../Common/FormControl/FormControl\";\r\n\r\nconst maxLength10 =  maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]}\r\n                   placeholder={\"Post message\"}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm ({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div className={s.forms}>\r\n                <h3>My post</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile}\r\n                         status={props.status} updateSatatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <div className={s.borderPost}>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateSatatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}/>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    /*withAuthRedirect,*/\r\n)(ProfileContainer);"],"sourceRoot":""}