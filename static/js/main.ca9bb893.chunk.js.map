{"version":3,"sources":["redux/dialogs-reducer.js","assets/Images/ava.png","hoc/withAuthRedirect.js","components/Users/Users.module.css","api/api.js","components/Navbar/Navbar.module.css","components/Common/FormControl/FormControl.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","reportWebVitals.js","components/Navbar/Navbar.jsx","components/Common/Paginator/paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","assets/Images/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","assets/Images/preloader.svg","components/Common/Preloader/Preloader.js","components/Common/FormControl/FormControl.module.css","components/Users/User.module.css","utils/validators/validator.js","components/Common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","validate","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_PARENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","usersId","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","nav","item","activeClassName","activeLink","Paginator","pg","itemClass","linkClass","links","activeLinkClass","activePage","totalItemsCount","pageRangeDisplayed","itemsCountPerPage","onChange","onPageChanged","bind","User","user","st","bgUnfollow","bgFollow","userPhoto","src","photos","small","info","disabled","some","onClick","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","Preloader","page","totalCount","Header","header","logo","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","formSummaryError","length","stopSubmit","_error","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledError","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","withRouter","ReactDOM","document","getElementById","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","Promise","reject","newPost","p","postId"],"mappings":"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","file":"static/js/main.ca9bb893.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name:\"Alex\"},\r\n        {id: 2, name:\"Tom\"},\r\n        {id: 3, name:\"Marry\"},\r\n        {id: 4, name:\"Lisa\"},\r\n        {id: 5, name:\"Kate\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message:'Hi'},\r\n        {id: 2, message:\"Buy\"},\r\n        {id: 3, message:\"You so funny\"},\r\n        {id: 4, message:\"Fuck you anyway\"},\r\n        {id: 5, message:\"I love you\"},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport let sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/ava.67d360fc.png\";","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2c6LY\",\"selectPages\":\"Users_selectPages__kOSNW\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"70108d08-3cfa-4a98-9eb5-c5fd9704b12e\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method.Please profileAPI object\")\r\n        return  profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return  instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return  instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return  instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return  instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login( email, password, rememberMe = false, captcha = null ) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha } )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1JcdC\",\"item\":\"Navbar_item__31PpP\",\"activeLink\":\"Navbar_activeLink__3ptYr\"};","import React from \"react\";\r\nimport s from \"./FormControl.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text ='') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators}\r\n               component={component} {...props}/> {text}\r\n    </div>\r\n)","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_PARENT_PAGE = \"SET_PARENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case SET_PARENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_PARENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n       followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    usersId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/setting\" activeClassName={s.activeLink}>Setting</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './Paginator.module.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\nclass Paginator extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.pg}>\r\n                <Pagination\r\n                    itemClass=\"page-item\"\r\n                    linkClass={\"page-link \" + s.links}\r\n                    activeLinkClass={s.linkClass}\r\n                    activePage={this.props.currentPage}\r\n                    totalItemsCount={this.props.totalUsersCount}\r\n                    pageRangeDisplayed={10}\r\n                    itemsCountPerPage={this.props.pageSize}\r\n                    onChange={this.props.onPageChanged.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Paginator;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        {pages.map(p => {\r\n            return <span\r\n                className={currentPage === p && s.selectPages}\r\n                onClick={(e) => {\r\n                    onPageChanged(p)\r\n                }}>{p}</span>\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;*/\r\n","import React from \"react\";\r\nimport s from './Users.module.css'\r\nimport st from './User.module.css'\r\nimport userPhoto from \"../../assets/Images/ava.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={st.user + ' ' + (user.followed ? st.bgUnfollow : st.bgFollow)}>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img className={s.userPhoto} src={user.photos.small != null\r\n                        ? user.photos.small : userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={st.info}>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id);\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id);\r\n                        }}>Follow</button>}\r\n                </div>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalUsersCount={totalUsersCount} pageSize={pageSize}/>\r\n        {\r\n            props.users.map(u => <User user={u} followingInProgress={props.followingInProgress}\r\n                                       unfollow={props.unfollow} follow={props.follow} key={u.id}/>)\r\n        }\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage, toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsersSuper\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let pageSize = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n/*\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n*/\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","export default __webpack_public_path__ + \"static/media/logo.80cd8dcd.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logo from \"../../assets/Images/logo.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={logo}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div>{props.login} <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormControl/FormControl\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"../Common/FormControl/FormControl.module.css\";\r\nimport {createField} from \"../Common/FormControl/FormControl\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField('Email', 'email', [required], Input)}\r\n        {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n        {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, \"remember me\")}\r\n        {captchaUrl && <img src={captchaUrl} />}\r\n        {captchaUrl &&  createField('Symbols from image', 'captcha', [required], Input)}\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return<React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    };\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter, Switch, Redirect} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n/*import ProfileContainer from \"./components/Profile/ProfileContainer\";*/\n/*import DialogsContainer from \"./components/Dialogs/DialogsContainer\";*/\nconst DialogsContainer = React.lazy(() => import( \"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import( \"./components/Profile/ProfileContainer\"));\n\nclass App extends React.Component {\n    catchAllUnhandledError = (promiseRejectionEvent) => {\n        alert('some error')\n        //console.log(promiseRejectionEvent)\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError)\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError)\n    }\n\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <Switch>\n                    <div className='app-wrapper-content'>\n                        <Route exact path='/'\n                               render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={() => <Login/>}/>\n                        <Route path='*'\n                               render={() => <div>404</div>}/>\n                    </div>\n                </Switch>\n            </div>\n\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n","import './index.css';\nimport store from \"./redux/redux-store\";\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {/*BrowserRouter,*/ HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <HashRouter /*BrowserRouter*//* basename={process.env.PUBLIC_URL}*/>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>,\n        document.getElementById('root')\n    );\n\n\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.18b9f153.svg\";","import preloader from \"../../../assets/Images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3TZ2D\",\"error\":\"FormControl_error__ITOob\",\"formSummaryError\":\"FormControl_formSummaryError__3vFdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__AmaZw\",\"bgFollow\":\"User_bgFollow__3jTc5\",\"bgUnfollow\":\"User_bgUnfollow__BX5SZ\",\"info\":\"User_info__3Y6xH\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pg\":\"Paginator_pg__3Dh9C\",\"links\":\"Paginator_links__1klhP\",\"linkClass\":\"Paginator_linkClass__1AiFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ziIL8\",\"loginBlock\":\"Header_loginBlock__2nzFd\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 1, message: \"I'm a superman\", likesCount: 78},\r\n\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}